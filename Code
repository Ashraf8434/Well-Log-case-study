# %%
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns 
import plotly.express as px
import lasio as ls

# %%
las=ls.read("Gorgonichthys_1_suite3_supercombo_log.las")

# %%
print(las.curves)

# %%
print(las.well)

# %%
print(las.header)

# %%
print(las.df())


# %%
well=las.df().reset_index()
well

# %% [markdown]
# Quality control of the data

# %%
# Plot histogram of the necessary input logs (GR, neutron, Sonic, density, resistivity) 
# supplied in the LAS file and describe your observations. Type of data distribution. 

import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# Set up figure and axes
num_columns = len(['GR', 'CALI', 'RHOB', 'TNPH'])
num_rows = int(np.ceil(num_columns / 2))  # Two columns per row

plt.figure(figsize=(10, 5 * num_rows))

colors = sns.color_palette()

# Plot each column with a different color
for i, column in enumerate(['GR', 'CALI', 'RHOB', 'TNPH']):
    plt.subplot(num_rows, 2, i + 1)
    sns.histplot(well[column].dropna(), bins=30, color=colors[i % len(colors)])
    plt.xlabel(['Gamma-Ray','CALI','Density (g/cc)','Porosity'][i])  # Set x-label for the current subplot
    plt.ylabel("Counts")
    plt.title(f"Distribution of {column}")

# Adjust layout and show plot
plt.tight_layout()
plt.show()


# %%

# Distribution of Gamma Ray
fig = px.histogram(well,
                   x='GR',
                   marginal='box',
                   nbins=50,
                   title='Distribution of Gamma Ray',
                   color_discrete_sequence=['red'],
                   width=800,
                   height=600)
fig.update_layout(bargap=0.1)
fig.show(renderer="browser")  # or renderer="svg"

# Distribution of Caliper
fig = px.histogram(well,
                   x='CALI',
                   marginal='box',
                   nbins=50,
                   title='Distribution of Caliper',
                   width=800,
                   height=600)
fig.update_layout(bargap=0.1)
fig.show(renderer="browser")  # or renderer="svg"

# Distribution of Formation Density
fig = px.histogram(well,
                   x='RHOB',
                   marginal='box',
                   nbins=50,
                   title='Distribution of Formation Density',
                   width=800,
                   height=600)
fig.update_layout(bargap=0.1)
fig.show(renderer="browser")  # or renderer="svg"

# Distribution of Neutron Porosity
fig = px.histogram(well,
                   x='TNPH',
                   marginal='box',
                   nbins=50,
                   title='Distribution of Neutron Porosity',
                   width=800,
                   height=600)
fig.update_layout(bargap=0.1)
fig.show(renderer="browser")  # or renderer="svg"


# %%
data=las.df()

# %%
# # Calculation
bitsize=8.5

# To setup the axes
fig,ax=plt.subplots(1,4,figsize=(10,15))
# ax2=ax[4].twiny()
for i in range(len(ax)):
    ax[i].twiny().xaxis.set_visible(False)

# To plot the Gamma Ray track
#ax[0].plot(well['GR'],well['DEPTH'],color='red',label='GR',linewidth='1')
ax[0].plot(well['GR'],well['DEPTH'],color='red',label='GR',linewidth='1')
# ax[0].axvline(x=p_5,label='Sand Line',color='blue',linestyle='--',linewidth='1')
# ax[0].axvline(x=p_95,label='Shale Line',color='green',linestyle='--',linewidth='1')
ax[0].set_xlabel('Gamma Ray (API)',color='black')
ax[0].set_ylabel('Depth (m)')
ax[0].set_xlim(0,250)
ax[0].xaxis.set_ticks_position('top')
ax[0].xaxis.set_label_position('top')
ax[0].tick_params(axis='x',colors='black')
ax[0].spines.top.set_edgecolor('black')
ax[0].spines.top.set_position(('axes',1.01))

# To plot the Caliper track
ax[1].plot(well['CALI'],well['DEPTH'],'black',label='CALI',linewidth='1')
ax[1].axvline(bitsize,color='blue',label='BS',linestyle='--',linewidth='1')
ax[1].set_xlim(8,14)
ax[1].set_xlabel('Caliper & Bitsize (Inch)',color='black')
ax[1].xaxis.set_ticks_position('top')
ax[1].xaxis.set_label_position('top')
ax[1].tick_params(axis='x',colors='black')
ax[1].spines.top.set_edgecolor('black')
ax[1].spines.top.set_position(('axes',1.01))

# To plot the Formation Density track
ax[2].plot(well['RHOB'],well['DEPTH'],color='purple',linewidth='1',label='RHOB')
ax[2].set_xlim(1.5,3)
# ax[2].set_xticks([1.95,3])
ax[2].set_xlabel('Formation Density',color='purple')
ax[2].xaxis.set_ticks_position('top')
ax[2].xaxis.set_label_position('top')
ax[2].tick_params(axis='x',colors='purple')
ax[2].spines.top.set_edgecolor('purple')
ax[2].spines.top.set_position(('axes',1.01))

# To plot the Neutron Porosity track
ax[3].plot(well['TNPH'],well['DEPTH'],color='g',linewidth='1',label='TNPH')
ax[3].set_xlabel('Neutron Porosity',color='g')
ax[3].set_xlim(0,0.4)
# ax[3].set_xticks([0.45,0])
ax[3].xaxis.set_ticks_position('top')
ax[3].xaxis.set_label_position('top')
ax[3].tick_params(axis='x',colors='g')
ax[3].spines.top.set_edgecolor('g')
ax[3].spines.top.set_position(('axes',1.01))


for i in range(len(ax)):
    ax[i].set_ylim(4218,3918)
    ax[i].legend()
    ax[i].grid(True)

plt.tight_layout()
plt.show()


# %%
#QUALITY CONTROL OF WIRELINE LOG
# Calculation
p_5 = well['GR'].quantile(0.05)  # 5th percentile of Gamma Ray
p_95 = well['GR'].quantile(0.95)  # 95th percentile of Gamma Ray
bitsize=8.5
R_w=0.12
I_gr=(well['GR']-p_5)/(p_95-p_5)
V_shc=0.33*(2**(2*I_gr)-1.1)
rho_ma=2.65 # For Sandstone Formation
rho_fl=1.1
total_porosity_neutron=well['SPHI']-0.04
total_porosity_density=(rho_ma-well['RHOB'])/(rho_ma-rho_fl)
total_porosity=(total_porosity_neutron+total_porosity_density)/2
a,n,m=1,2,1.8
s_w=np.power((a*R_w/(np.power(total_porosity,m)*well['RT'])),1/n)

# To setup the axes
fig,ax=plt.subplots(1,6,figsize=(15,20))
ax1=ax[3].twiny()
ax2=ax[4].twiny()
for i in range(len(ax)):
    ax[i].twiny().xaxis.set_visible(False)

# To plot the Gamma Ray track
ax[0].plot(well['GR'],well['DEPTH'],color='black',label='Gamma Ray',linewidth='1')
ax[0].axvline(x=p_5,label='Sand Line',color='blue',linestyle='--',linewidth='1')
ax[0].axvline(x=p_95,label='Shale Line',color='green',linestyle='--',linewidth='1')
ax[0].set_xlabel('Gamma Ray (API)',color='black')
ax[0].set_ylabel('Depth (m)')
ax[0].set_xlim(0,250)
ax[0].xaxis.set_ticks_position('top')
ax[0].xaxis.set_label_position('top')
ax[0].tick_params(axis='x',colors='black')
ax[0].spines.top.set_edgecolor('black')
ax[0].spines.top.set_position(('axes',1.01))

# To plot the Caliper track
ax[1].plot(well['CALI'],well['DEPTH'],'black',label='Caliper',linewidth='1')
ax[1].axvline(bitsize,color='blue',label='Bitsize',linestyle='--',linewidth='1')
ax[1].set_xlim(8,14)
ax[1].set_xlabel('Caliper & Bitsize (Inch)',color='black')
ax[1].xaxis.set_ticks_position('top')
ax[1].xaxis.set_label_position('top')
ax[1].tick_params(axis='x',colors='black')
ax[1].spines.top.set_edgecolor('black')
ax[1].spines.top.set_position(('axes',1.01))

# To plot the Volume of Shale track
ax[2].plot(V_shc,well['DEPTH'],color='black',linewidth='1')
ax[2].axvline(1,color='blue',label='Pure Shale Line',linestyle='--',linewidth='1')
ax[2].set_xlim(-1,2)
ax[2].set_xlabel('Volume of Shale (for older rocks)',color='black')
ax[2].xaxis.set_ticks_position('top')
ax[2].xaxis.set_label_position('top')
ax[2].tick_params(axis='x',colors='black')
ax[2].spines.top.set_edgecolor('black')
ax[2].spines.top.set_position(('axes',1.01))

# To plot the Total Porosity (Neutron) track
ax[3].plot(total_porosity_neutron,well['DEPTH'],color='black',linewidth='1')
ax[3].set_xlabel('Total Porosity (Neutron)',color='black')
ax[3].set_xlim(0.6,-0.2)
ax[3].xaxis.set_ticks_position('top')
ax[3].xaxis.set_label_position('top')
ax[3].tick_params(axis='x',colors='black')
ax[3].spines.top.set_edgecolor('black')
ax[3].spines.top.set_position(('axes',1.01))

# To plot the Neutron Porosity track
ax[4].plot(well['SPHI'],well['DEPTH'],color='black',linewidth='1')
ax[4].set_xlabel('Neutron Porosity',color='black')
ax[4].set_xlim(0.45,-0.15)
ax[4].xaxis.set_ticks_position('top')
ax[4].xaxis.set_label_position('top')
ax[4].tick_params(axis='x',colors='black')
ax[4].spines.top.set_edgecolor('black')
ax[4].spines.top.set_position(('axes',1.01))

# To plot the Saturation of Water track
ax[5].plot(s_w,well['DEPTH'],color='black',linewidth='1')
ax[5].set_xlabel('Saturation of Water',color='black')
# ax[5].set_xlim(0,1)
ax[5].xaxis.set_ticks_position('top')
ax[5].xaxis.set_label_position('top')
ax[5].tick_params(axis='x',colors='black')
ax[5].spines.top.set_edgecolor('black')
ax[5].spines.top.set_position(('axes',1.01))

# To plot the Density track on top of Neutron Porosity track
ax1.plot(total_porosity_density,well['DEPTH'],color='blue',linewidth='1')
ax1.set_xlabel('Total Porosity (Density)')
ax1.set_xlim(0.6,-0.2)
ax1.xaxis.label.set_color('blue')
ax1.tick_params(axis='x',colors='blue')
ax1.spines.top.set_position(('axes', 1.04))
ax1.spines.top.set_visible(True)
ax1.spines.top.set_edgecolor('blue')

# To plot the Total Porosity (Density) track on top of Total Porosity (Density) track
ax2.plot(well['RHOB'],well['DEPTH'],color='blue',linewidth='1')
ax2.set_xlabel('Formation Density')
ax2.set_xlim(1.75,3)
ax2.xaxis.label.set_color('blue')
ax2.tick_params(axis='x',colors='blue')
ax2.spines.top.set_position(('axes', 1.04))
ax2.spines.top.set_visible(True)
ax2.spines.top.set_edgecolor('blue')

for i in range(len(ax)):
    ax[i].set_ylim(4128.5,3918)
    ax[i].legend()
    ax[i].grid(True)
    ax[i].axhline(3996.5)
    ax[i].axhline(4000)

plt.tight_layout()
plt.show()

# %%
bitsize = 8.5

# Setup the axes
fig, ax = plt.subplots(1, 4, figsize=(10, 15))
ax2 = ax[2].twiny()

for i in range(len(ax)):
    ax[i].twiny().xaxis.set_visible(False)

# Plot the Gamma Ray track
ax[0].plot(well['GR'], well['DEPTH'], color='red', label='GR', linewidth='1')
ax[0].axvline(x=p_5, label='Sand Line', color='blue', linestyle='--', linewidth='1')
ax[0].axvline(x=p_95, label='Shale Line', color='green', linestyle='--', linewidth='1')
ax[0].set_xlabel('Gamma Ray (API)', color='black')
ax[0].set_ylabel('Depth (m)')
ax[0].set_xlim(0, 250)
ax[0].xaxis.set_ticks_position('top')
ax[0].xaxis.set_label_position('top')
ax[0].tick_params(axis='x', colors='black')
ax[0].spines.top.set_edgecolor('black')
ax[0].spines.top.set_position(('axes', 1.01))

# Plot the Caliper track
ax[1].plot(well['CALI'], well['DEPTH'], 'black', label='CALI', linewidth='1')
ax[1].axvline(bitsize, color='blue', label='BS', linestyle='--', linewidth='1')
ax[1].set_xlim(8, 14)
ax[1].set_xlabel('Caliper & Bitsize (Inch)', color='black')
ax[1].xaxis.set_ticks_position('top')
ax[1].xaxis.set_label_position('top')
ax[1].tick_params(axis='x', colors='black')
ax[1].spines.top.set_edgecolor('black')
ax[1].spines.top.set_position(('axes', 1.01))

# Plot the Formation Density track
ax[2].plot(well['RHOB'], well['DEPTH'], color='purple', linewidth='1', label='RHOB')
ax[2].set_xlim(1.5, 3)
ax[2].set_xlabel('Formation Density', color='purple')
ax[2].xaxis.set_ticks_position('top')
ax[2].xaxis.set_label_position('top')
ax[2].tick_params(axis='x', colors='purple')
ax[2].spines.top.set_edgecolor('purple')
ax[2].spines.top.set_position(('axes', 1.01))

# Plot the Total Porosity (Neutron) track
ax[3].plot(total_porosity, well['DEPTH'], color='black', linewidth='1')
ax[3].set_xlabel('Total Porosity', color='black')
ax[3].set_xlim(0.4, 0)
ax[3].xaxis.set_ticks_position('top')
ax[3].xaxis.set_label_position('top')
ax[3].tick_params(axis='x', colors='black')
ax[3].spines.top.set_edgecolor('black')
ax[3].spines.top.set_position(('axes', 1.01))

# Plot the Neutron Porosity track
ax[4].plot(well['TNPH'], well['DEPTH'], color='g', linewidth='1', label='TNPH')
ax[4].set_xlabel('Neutron Porosity', color='g')
ax[4].set_xlim(0, 0.4)
ax[4].xaxis.set_ticks_position('top')
ax[4].xaxis.set_label_position('top')
ax[4].tick_params(axis='x', colors='g')
ax[4].spines.top.set_edgecolor('g')
ax[4].spines.top.set_position(('axes', 1.01))

# Plot the Saturation of Water track
ax[5].plot(s_w, well['DEPTH'], color='black', linewidth='1')
ax[5].set_xlabel('Saturation of Water', color='black')
ax[5].set_xlim(0, 1)
ax[5].xaxis.set_ticks_position('top')
ax[5].xaxis.set_label_position('top')
ax[5].tick_params(axis='x', colors='black')
ax[5].spines.top.set_edgecolor('black')
ax[5].spines.top.set_position(('axes', 1.01))

# Plot the Reservoir Flag track
ax[6].plot(Res_flag, well['DEPTH'], color='black', linewidth='0.5')
ax[6].fill_betweenx(well['DEPTH'], 0, Res_flag, facecolor='#ffff00', hatch='..')
ax[6].set_xlabel('Reservoir Flag', color='black')
ax[6].set_xlim(0, 1)
ax[6].xaxis.set_ticks_position('top')
ax[6].xaxis.set_label_position('top')
ax[6].tick_params(axis='x', colors='black')
ax[6].spines.top.set_edgecolor('black')
ax[6].spines.top.set_position(('axes', 1.01))

# Plot the Total Porosity (Density) track on top of Total Porosity (Density) track
ax2.plot(well['RHOB'], well['DEPTH'], color='blue', linewidth='1')
ax2.set_xlabel('Formation Density')
ax2.set_xlim(1.95, 3)
ax2.set_xticks([1.95, 3])
ax2.xaxis.label.set_color('blue')
ax2.tick_params(axis='x', colors='blue')
ax2.spines.top.set_position(('axes', 1.04))
ax2.spines.top.set_visible(True)
ax2.spines.top.set_edgecolor('blue')

for i in range(len(ax)):
    ax[i].set_ylim(4218, 3918)
    ax[i].legend()
    ax[i].grid(True)
    ax[i].axhline(y=4001.5)
    ax[i].axhline(y=4114.5)
    ax[i].axhline(y=4133.8)
    ax[i].axhline(y=4140.8)

plt.tight_layout()
plt.show()


# %%
#TO PLOT THE FORMATION DENSITY VS NEUTRON POROSITY
fig,ax=plt.subplots(figsize=(12,7))
plot=ax.scatter(x=well['TNPH'],y=well['RHOB'],c=V_shc,vmin=0,vmax=1,cmap='CMRmap')
# ax.text(0.06,1.8,'Gas Correction',
#             bbox=dict(boxstyle='circle,pad=0.3',alpha=0.3,facecolor='green'))
ax.set_xlabel('Neutron Porosity')
ax.set_ylabel('Formation Density')
ax.set_title('Formation Density-Neutron Vs Porosity Crossplot')
ax.invert_yaxis()
ax.grid(True)
plt.colorbar(plot,label='Volume of Shale (cc)')
plt.show()

# %%
# To plot the Formation Density track
fig, ax = plt.subplots(figsize=(4, 15))
ax.twiny().xaxis.set_visible(False)

# Change the line color to dark blue and increase the line width
ax.plot(well['RHOB'], well['DEPTH'], color='darkblue', linewidth='1', label='RHOB')

# Change the fill color to light blue
ax.fill_betweenx(well['DEPTH'], 0, well['RHOB'], where=(well['RHOB']>0), facecolor='lightblue', alpha=0.5)

ax.set_xlim(1.5, 3)
ax.set_xlabel('Formation Density (g/cc)', color='darkblue')

# Change the tick color to dark blue
ax.tick_params(axis='x', colors='darkblue')

# Change the spine color to dark blue
ax.spines.top.set_edgecolor('darkblue')

ax.xaxis.set_ticks_position('top')
ax.xaxis.set_label_position('top')
ax.spines.top.set_position(('axes', 1.01))
ax.set_ylim(4218, 3918)

# Change the legend font color to dark blue
legend = ax.legend()
plt.setp(legend.get_texts(), color='darkblue')

ax.grid(True, linestyle='--', alpha=0.6)  # Add grid lines and adjust their style
plt.tight_layout()
plt.show()

# %%
# To plot the Formation Density track
fig,ax=plt.subplots(figsize=(4,15))
ax.twiny().xaxis.set_visible(False)
ax.plot(well['CALI'],well['DEPTH'],color='black',linewidth='0.5',label='CALI')
ax.axvline(bitsize,color='blue',label='Bitsize = 8.5 inch',linestyle='--',linewidth='1')
ax.fill_betweenx(well['DEPTH'],0,well['CALI'],where=(well['CALI']>10.5),facecolor='lightblue',alpha=0.6)
ax.fill_betweenx(well['DEPTH'],0,well['CALI'],where=(well['CALI']<=10.5),facecolor='plum',alpha=0.9)
ax.set_xlim(8,14)
# ax.set_xticks([1.95,3])
ax.set_xlabel('Caliper (Inch)',color='black')
ax.xaxis.set_ticks_position('top')
ax.xaxis.set_label_position('top')
ax.tick_params(axis='x',colors='black')
ax.spines.top.set_edgecolor('black')
ax.spines.top.set_position(('axes',1.01))
ax.set_ylim(4218,3918)
ax.legend()
ax.grid(True)
plt.tight_layout()
plt.show()

# %%
# Define the number of bins and plot the histogram
plt.figure(figsize=(10, 6))
plt.hist(well['GR'], bins=30, color='skyblue', edgecolor='black')

# Add labels, title, and grid
plt.xlabel('Gamma Ray (API)', fontsize=14)
plt.ylabel('Frequency', fontsize=14)
plt.title('Histogram of Gamma Ray (GR) Values', fontsize=16)
plt.grid(True, linestyle='--', alpha=0.7)

# Show the plot
plt.show()


# %%



